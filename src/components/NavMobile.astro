---
import { LANGUAGES, getLocalizedPathname, getLangFromUrl } from '@/i18n/utils'
import NavIcon from '@/components/NavIcon.astro'
import Logo from '@/icons/Logo.astro'
import TranslateIcon from '@/icons/Translate.astro'

const { pathname } = Astro.url
const lang = getLangFromUrl(Astro.url)

const { routes } = Astro.props
---

<nav class='flex w-full max-w-6xl mx-auto items-center justify-between'>
  <a
    href={routes.home.path}
    class='h-10 w-10 flex-grow max-w-16 order-2'
    aria-label='logo of the website rxtel.dev'
  >
    <Logo />
  </a>

  <ul
    id='nav-mobile'
    class='text-cWhite grid grid-cols-2 place-content-center place-items-center justify-center gap-5 uppercase absolute transform -translate-y-28 left-0 right-0 mx-auto w-full p-5 rounded-2xl text-xxs bg-cPaper shadow-md z-10'
  >
    {
      Object.entries(routes).map(([key, { name, path }]) => (
        <li class='size-full'>
          <a
            class='text-cWhite hover:text-cBlue transition-colors duration-300 ease-in h-full w-full flex flex-col place-items-center gap-2'
            aria-label={name}
            href={path}
          >
            <div class='size-6'>
              <NavIcon name={key} />
            </div>
            {name}
          </a>
        </li>
      ))
    }
  </ul>

  <label class='hamburger order-3'>
    <input type='checkbox' class='check-hamburger' />
    <svg viewBox='0 0 32 32'>
      <path
        class='line line-top-bottom'
        d='M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22'
      ></path>
      <path class='line' d='M7 16 27 16'></path>
    </svg>
  </label>

  <ul
    id='lang-options'
    class='text-cWhite grid grid-cols-2 place-content-center place-items-center justify-center gap-5 uppercase absolute transform -translate-y-20 left-0 right-0 mx-auto w-full p-5 rounded-2xl text-xxs bg-cPaper shadow-md z-10'
  >
    {
      Object.entries(LANGUAGES).map(([key, route]) => {
        const href = getLocalizedPathname(pathname, key)
        const isActive = lang === key ? 'text-cBlue' : 'text-cWhite'
        const image = `/flag-${key}.webp`
        return (
          <li class='size-full'>
            <a
              class={`${isActive} hover:text-cBlue transition-colors duration-300 ease-in h-full w-full flex flex-col place-items-center gap-2`}
              href={href}
              aria-label={route}
            >
              <div class='size-6 flex items-end'>
                <img
                  src={image}
                  alt={`flag for ${key}`}
                  loading='lazy'
                  width='24'
                  height='24'
                />
              </div>
              {route}
            </a>
          </li>
        )
      })
    }
  </ul>

  <label
    class='lang order-1 text-cWhite transition-colors duration-300 ease-in size-6 cursor-pointer'
  >
    <input type='checkbox' class='check-lang' />
    <TranslateIcon />
  </label>
</nav>

<style>
  .hamburger {
    cursor: pointer;
  }

  .check-hamburger,
  .check-lang {
    display: none;
  }

  .hamburger svg {
    height: 32px;
    transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line {
    fill: none;
    stroke: white;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 1.5;
    transition:
      stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line-top-bottom {
    stroke-dasharray: 12 63;
  }

  .check-hamburger:checked + svg {
    transform: rotate(-45deg);
  }

  .check-hamburger:checked + svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
  }

  #nav-mobile,
  #lang-options {
    opacity: 0;
    visibility: hidden;
    transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  :has(.check-hamburger:checked) #nav-mobile {
    animation: slide linear both;
    visibility: visible;
    @apply -translate-y-[117px] opacity-100;
  }

  :has(.check-hamburger:checked) .line {
    animation: colorActive 600ms both;
  }

  :has(.check-lang:checked) #lang-options {
    animation: slide linear both;
    visibility: visible;
    @apply -translate-y-[84px] opacity-100;
  }

  :has(.check-lang:checked) .lang {
    @apply text-cBlue;
  }

  /* remove scroll when nav is open */
  :global(:has(.check-hamburger:checked) body),
  :global(:has(.check-lang:checked) body) {
    @apply overflow-hidden;
  }

  @keyframes colorActive {
    to {
      @apply stroke-cBlue;
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const $hamburgerBtn = document.querySelector(
      '.check-hamburger'
    ) as HTMLInputElement
    const $hamburgerCheckbox = document.querySelector(
      '.check-hamburger'
    ) as HTMLInputElement
    const $toggleLangBtn = document.querySelector('.lang') as HTMLInputElement
    const $langCheckbox = document.querySelector(
      '.check-lang'
    ) as HTMLInputElement

    const $itemsLang = Array.from(
      document.querySelectorAll('#lang-options li')
    ) as HTMLAnchorElement[]
    const $itemsNav = Array.from(
      document.querySelectorAll('#nav-mobile li')
    ) as HTMLButtonElement[]

    // close nav if another nav item is open
    const onClickNav = (elem: HTMLInputElement, checkbox: HTMLInputElement) => {
      elem.addEventListener('click', () => {
        if (checkbox.checked) {
          checkbox.checked = false
          return
        }
      })
    }

    onClickNav($toggleLangBtn, $hamburgerCheckbox)
    onClickNav($hamburgerBtn, $langCheckbox)

    type HTMLElementArray = HTMLButtonElement[] | HTMLAnchorElement[]

    // close nav when click on nav item
    const onClickNavItem = (
      elements: HTMLElementArray,
      checkbox: HTMLInputElement
    ) => {
      elements.forEach((item: HTMLButtonElement | HTMLAnchorElement) => {
        item.addEventListener('click', () => {
          checkbox.checked = false
        })
      })
    }

    onClickNavItem($itemsLang, $langCheckbox)
    onClickNavItem($itemsNav, $hamburgerCheckbox)
  })
</script>
