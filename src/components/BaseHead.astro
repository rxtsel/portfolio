---
import Favicons from '@/components/Favicons.astro'
import { ViewTransitions } from 'astro:transitions'
import {
  LANGUAGES,
  pathNameIsInLanguage,
  DEFAULT_LANG,
  getLocalizedPathname,
  type LANG
} from '@/i18n/utils'

interface Props {
  title: string
  description: string
  image?: string
  lang: string
  keywords: string
}

const canonicalPathname = () => {
  if (Astro.url.pathname.includes('/es')) {
    return '/'
  } else {
    return pathNameIsInLanguage(Astro.url.pathname, DEFAULT_LANG)
      ? Astro.url.pathname
      : getLocalizedPathname(Astro.url.pathname, DEFAULT_LANG)
  }
}

const canonicalURL = new URL(canonicalPathname(), Astro.site)

const { title, description, image, keywords } = Astro.props

const alternateLang = Object.keys(LANGUAGES) as LANG[]
const alternateLinks = alternateLang.map((_lang: LANG) => {
  return {
    href: new URL(getLocalizedPathname(Astro.url.pathname, _lang), Astro.site),
    hreflang: _lang
  }
})
---

<!-- Global Metadata -->
<meta charset='UTF-8' />
<meta name='viewport' content='width=device-width,initial-scale=1' />
<meta name='generator' content={Astro.generator} />
<meta name='author' content='Cristhian Melo' />
<meta name='keywords' content={keywords} />
<link rel='manifest' href='/site.webmanifest' />
<link rel='sitemap' href='/sitemap-index.xml' />
<Favicons />
<ViewTransitions />

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Alternate URLs -->
{
  alternateLinks.map(({ href, hreflang }) => (
    <link rel='alternate' href={href} hreflang={hreflang} />
  ))
}

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />

<!-- Open Graph / Facebook -->
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={new URL(image, Astro.url)} />

<!-- Ads -->
{
  Astro.url.pathname.includes('/blog') && (
    <script
      is:inline
      async
      src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6984927047139306'
      crossorigin='anonymous'
    />
  )
}

<!-- Google tag (gtag.js) -->
<script
  is:inline
  async
  src='https://www.googletagmanager.com/gtag/js?id=G-DCPSPRJWRR'></script>
<script is:inline>
  window.dataLayer = window.dataLayer || []
  function gtag() {
    dataLayer.push(arguments)
  }
  gtag('js', new Date())

  gtag('config', 'G-DCPSPRJWRR')
</script>
