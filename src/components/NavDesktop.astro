---
import { LANGUAGES } from '@/i18n/utils'
import { SOCIALS } from '@/constants/routes'
import Logo from '@/icons/Logo.astro'
import TranslateIcon from '@/icons/Translate.astro'
import LinkedinIcon from '@/icons/Linkedin.astro'
import TwitterIcon from '@/icons/Twitter.astro'
import GithubIcon from '@/icons/Github.astro'
import {
  getLangFromUrl,
  useTranslations,
  getLocalizedPathname
} from '@/i18n/utils'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const { pathname } = Astro.url

const { routes } = Astro.props
---

<nav class='flex w-full max-w-6xl mx-auto items-center justify-between'>
  <a
    href={routes.home.path}
    class='h-16 w-16 flex-grow max-w-36'
    aria-label='logo of the website rxtel.dev'
  >
    <Logo />
  </a>

  <ul class='text-cWhite flex space-x-4 uppercase'>
    {
      Object.entries(routes).map(([_key, route]) => (
        <li>
          <a
            class='text-cWhite hover:text-cBlue transition-colors duration-300 ease-in'
            aria-label={route.name}
            href={route.path}
          >
            {route.name}
          </a>
        </li>
      ))
    }
  </ul>

  <ul class='text-cWhite flex space-x-4 flex-shrink-0'>
    <li class='w-6 h-6 relative lang-btn-desktop' title={t('single.languages')}>
      <label
        class='lang-desktop hover:text-cBlue order-1 text-cWhite transition-colors duration-300 ease-in size-6 cursor-pointer'
      >
        <input type='checkbox' class='check-lang-desktop' />
        <TranslateIcon />
      </label>

      <ul
        id='lang-options-desktop'
        class='text-cWhite grid place-content-start uppercase absolute transform left-0 right-0 mx-auto w-max p-2 rounded-md bg-cPaper shadow-md z-10'
      >
        {
          Object.entries(LANGUAGES).map(([key, route]) => {
            const href = getLocalizedPathname(pathname, key)
            const isActive =
              lang === key ? 'text-cBlue bg-cBlack' : 'text-cWhite'
            return (
              <li class='size-full'>
                <a
                  class={`${isActive} hover:text-cBlue hover:bg-cBlack px-10 py-2 rounded transition-colors duration-300 ease-in h-full w-full flex place-items-center gap-2`}
                  href={href}
                  aria-label={route}
                >
                  {route}
                </a>
              </li>
            )
          })
        }
      </ul>
    </li>

    <li class='w-6 h-6'>
      <a
        href={SOCIALS.twitter}
        target='_blank'
        aria-label='Twitter'
        class='text-cWhite hover:text-cBlue transition-colors duration-300 ease-in'
        ><TwitterIcon /></a
      >
    </li>
    <li class='w-6 h-6'>
      <a
        href={SOCIALS.linkedin}
        target='_blank'
        class='text-cWhite hover:text-cBlue transition-colors duration-300 ease-in'
        aria-label='Linkedin'><LinkedinIcon /></a
      >
    </li>
    <li class='w-6 h-6'>
      <a
        href={SOCIALS.github}
        target='_blank'
        aria-label='Github'
        class='text-cWhite hover:text-cBlue transition-colors duration-300 ease-in'
        ><GithubIcon /></a
      >
    </li>
  </ul>
</nav>

<style>
  .check-lang-desktop {
    display: none;
  }

  #lang-options-desktop {
    opacity: 0;
    visibility: hidden;
    transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  :has(.check-lang-desktop:checked) #lang-options-desktop {
    animation: slide linear both;
    visibility: visible;
    @apply translate-y-[5px] opacity-100;
  }

  :has(.check-lang-desktop:checked) .lang-desktop {
    @apply text-cBlue;
  }

  @keyframes colorActive {
    to {
      @apply stroke-cBlue;
    }
  }
</style>

<script>
  const $langBtn = document.querySelector('.lang-btn-desktop') as HTMLElement
  const $langCheckbox = document.querySelector(
    '.check-lang-desktop'
  ) as HTMLInputElement

  const handleClickOutside = (e: MouseEvent) => {
    if (
      !e.target.closest('.lang-btn-desktop') &&
      !e.target.closest('.lang-desktop')
    ) {
      $langCheckbox.checked = false
      document.body.removeEventListener('click', handleClickOutside)
    }
  }

  $langBtn.addEventListener('click', () => {
    if ($langCheckbox.checked) {
      document.body.addEventListener('click', handleClickOutside)
    }
  })
</script>
